#ifndef CHROOT_SETUP_SCRIPT_H
#define CHROOT_SETUP_SCRIPT_H

static const char chroot_setup_script_content[] =
    "#!/bin/bash\n"
    "\n"
    "arch=$1\n"
    "chroot_path=$2\n"
    "logfile=$3\n"
    "qemu_static_bin=\"/usr/bin/qemu-${arch}-static\"\n"
    "\n"
    "# Check if parameters were passed\n"
    "if [ -z \"$arch\" ] || [ -z \"$chroot_path\" ] || [ -z \"$logfile\" ]; then\n"
    "    echo \"From chrootSetup.sh: Usage: $0 <architecture> <chroot_path> <logfile>\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Check if qemu static binary exists\n"
    "if [ ! -f \"$qemu_static_bin\" ]; then\n"
    "    echo \"Warning: From chrootSetup.sh: symlink $qemu_static_bin not found on host. Getting original qemu binary...\"\n"
    "    qemu_arch=$arch\n"
    "    case \"$arch\" in\n"
    "        (\"amd64\") qemu_arch=\"x86_64\" ;; \n"
    "        (\"arm64\") qemu_arch=\"aarch64\" ;; \n"
    "        (\"armhf\") qemu_arch=\"arm\" ;; \n"
    "        (\"armel\") qemu_arch=\"arm\" ;; \n"
    "        (\"ppc64el\") qemu_arch=\"ppc64le\" ;; \n"
    "   esac\n"
    "   qemu_static_bin=\"/usr/bin/qemu-${qemu_arch}-static\"\n"
    "   if [ ! -f \"$qemu_static_bin\" ]; then\n"
    "       echo \"Error: From chrootSetup.sh: $qemu_static_bin binary not found on host. Please install qemu-user-static package.\"\n"
    "       exit 1\n"
    "   fi\n"
    "fi\n"
    "\n"
    "# Redirect output to the logfile (note: this is still the log file on the host, not inside the chroot)\n"
    "exec >> \"$logfile\" 2>&1\n"
    "echo \"From chrootSetup.sh: Starting chroot setup for $arch at $chroot_path\"\n"
    "\n"
    "# Check if the chroot already exists (simple check on the directory)\n"
    "if [ -d \"$chroot_path/home\" ]; then\n"
    "    echo \"From chrootSetup.sh: Chroot directory $chroot_path already seems to be set up (home dir exists). Skipping debootstrap.\"\n"
    "    exit 0\n"
    "fi\n"
    "\n"
    "echo \"From chrootSetup.sh: Running debootstrap first stage for $arch...\"\n"
    "# If we are on arm64 I have to use bookworm as distro, not trixie\n"
    "distro=\"trixie\"\n"
    "if [ \"$arch\" = \"arm64\" ]; then\n"
    "    echo \"From chrootSetup.sh: Using bookworm as the distribution for architecture $arch.\"\n"
    "    distro=\"bookworm\"\n"
    "else\n"
    "    echo \"From chrootSetup.sh: Using trixie as the distribution for architecture $arch.\"\n"
    "fi\n"
    "\n"
    "sudo debootstrap --arch=\"$arch\" --foreign \"$distro\" \"$chroot_path\" http://deb.debian.org/debian\n"
    "if [ $? -ne 0 ]; then\n"
    "    echo \"Error: From chrootSetup.sh: debootstrap first stage failed for $arch.\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "echo \"From chrootSetup.sh: Copying $qemu_static_bin to $chroot_path/usr/bin/...\"\n"
    "sudo cp \"$qemu_static_bin\" \"$chroot_path/usr/bin/\"\n"
    "if [ $? -ne 0 ]; then\n"
    "    echo \"Error: From chrootSetup.sh: Failed to copy qemu static binary.\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "echo \"From chrootSetup.sh: Running debootstrap second stage for $arch...\"\n"
    "sudo chroot \"$chroot_path\" /debootstrap/debootstrap --second-stage\n"
    "if [ $? -ne 0 ]; then\n"
    "    echo \"Error: From chrootSetup.sh: debootstrap second stage failed for $arch.\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "echo \"From chrootSetup.sh: Chroot setup completed successfully for $arch at $chroot_path.\"\n"
    "exit 0\n";

#endif
