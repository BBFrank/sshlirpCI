#ifndef COPY_SOURCE_SCRIPT_H
#define COPY_SOURCE_SCRIPT_H

static const char copy_source_script_content[] =
    "#!/bin/bash\n"
    "\n"
    "host_src=$1\n"
    "chroot_path=$2\n"
    "thread_chroot_src_dir=$3\n"
    "logfile=$4\n"
    "\n"
    "# Check if parameters were passed\n"
    "if [ -z \"$host_src\" ] || [ -z \"$chroot_path\" ] || [ -z \"$thread_chroot_src_dir\" ] || [ -z \"$logfile\" ]; then\n"
    "    echo \"From copySource.sh: Usage: $0 <host_src> <chroot_path> <thread_chroot_src_dir> <logfile>\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Redirect output to the logfile (this is also a log file on the host, not inside the chroot - although it's a non-shared, thread-personal log file)\n"
    "exec >> \"$logfile\" 2>&1\n"
    "echo \"From copySource.sh: Copying sources into chroot $chroot_path\"\n"
    "\n"
    "chroot_src_full_path=\"$chroot_path$thread_chroot_src_dir\"\n"
    "\n"
    "# Create destination directories inside the chroot if they don't exist (in theory they should already exist thanks to the check_worker_dirs function invoked by the worker)\n"
    "echo \"From copySource.sh: Ensuring copy point $chroot_src_full_path exists.\"\n"
    "sudo mkdir -p \"$chroot_src_full_path\"\n"
    "if [ $? -ne 0 ]; then\n"
    "    echo \" Error: From copySource.sh: Error creating copy point $chroot_src_full_path.\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Copy source\n"
    "# First check if it's already copied to avoid errors\n"
    "if [ -d \"$chroot_src_full_path/.git\" ]; then\n"
    "    echo \"From copySource.sh: $host_src already copied to $chroot_src_full_path.\"\n"
    "else\n"
    "    echo \"From copySource.sh: Copying $host_src to $chroot_src_full_path\"\n"
    "    sudo cp -rT \"$host_src\" \"$chroot_src_full_path\"\n"
    "    if [ $? -ne 0 ]; then\n"
    "        echo \"Error: From copySource.sh: Error copying $host_src to $chroot_src_full_path.\"\n"
    "        exit 1\n"
    "    fi\n"
    "fi\n"
    "\n"
    "echo \"From copySource.sh: Source copying for $host_src completed successfully.\"\n"
    "exit 0\n";

#endif
