#ifndef GIT_CLONE_SCRIPT_H
#define GIT_CLONE_SCRIPT_H

static const char git_clone_script_content[] =
    "#!/bin/bash\n"
    "\n"
    "what2clone=$1\n"
    "where2clone=$2\n"
    "logfile=$3\n"
    "\n"
    "# Controlla che i parametri siano stati passati\n"
    "if [ -z \"$what2clone\" ] || [ -z \"$where2clone\" ] || [ -z \"$logfile\" ]; then\n"
    "    echo \"From gitClone.sh (embedded): Usage: $0 <repository_url> <destination_directory> <logfile>\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Controlla che il file di log esista e sia scrivibile\n"
    "# Questo controllo viene fatto prima della redirezione exec\n"
    "if [ ! -f \"$logfile\" ]; then\n"
    "    # Se il logfile non esiste, prova a crearlo per evitare errori di redirezione\n"
    "    touch \"$logfile\" > /dev/null 2>&1\n"
    "    if [ $? -ne 0 ]; then\n"
    "        echo \"From gitClone.sh (embedded): Error: Logfile does not exist and cannot be created: $logfile\"\n"
    "        exit 1\n"
    "    fi\n"
    "elif [ ! -w \"$logfile\" ]; then\n"
    "    echo \"From gitClone.sh (embedded): Error: Logfile is not writable: $logfile\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Reinderizza gli output dei comandi e gli echo nel file di log\n"
    "exec >> \"$logfile\" 2>&1\n"
    "\n"
    "# Controlla che il path di clonaggio sia valido (deve esistere, creato da C)\n"
    "if [ ! -d \"$where2clone\" ]; then\n"
    "    echo \"From gitClone.sh (embedded): Error: Destination directory does not exist: $where2clone. It should be created by the C program.\"\n"
    "    exit 1\n"
    "fi\n"
    "\n"
    "# Controlla se nella directory c'è già un repository Git\n"
    "if [ -d \"$where2clone/.git\" ]; then\n"
    "    echo \"From gitClone.sh (embedded): Info: $where2clone already contains a Git repository.\"\n"
    "    exit 0\n"
    "fi\n"
    "\n"
    "echo \"From gitClone.sh (embedded): Cloning from $what2clone into $where2clone...\"\n"
    "git clone \"$what2clone\" \"$where2clone\"\n"
    "if [ $? -ne 0 ]; then\n"
    "    echo \"From gitClone.sh (embedded): Error: Failed to clone repository $what2clone.\"\n"
    "    exit 1\n"
    "fi\n"
    "echo \"From gitClone.sh (embedded): Cloning completed successfully for $what2clone.\"\n"
    "exit 0\n";

#endif
